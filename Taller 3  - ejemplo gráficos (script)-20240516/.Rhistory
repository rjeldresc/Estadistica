setwd("d:/dev/Estadistica")
library(readxl)
Base_Taller3 <- read_excel("Base_Taller3.xlsx",
sheet = "Parte1")
View(Base_Taller3)
library(moments)
kurtosis(Ingreso_Anual)
setwd("d:/dev/Estadistica")
#setwd("C:/Users/caroh/Documents/RStudio/Clases/Clase 3") #Definición de directorio de trabajo
library(readxl)
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte1") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columnas importadas
kurtosis(Ingreso_Anual)
summary(Ingreso_Anual)  # resumen 5 números y media
tapply(Ingreso_Anual, Sexo, summary) # resumen del ingreso anual 5 números y media, por sexo
tapply(Ingreso_Anual, Sucursal, summary)
library(psych)
tabla_resumen <- psych::describeBy(Ingreso_Anual)
psych::describeBy(Ingreso_Anual,group=Sexo) # separado por categorías
library(moments)
library(ggplot2)
library(psych)
tabla_resumen <- psych::describeBy(Ingreso_Anual)
psych::describeBy(Ingreso_Anual,group=Sexo)
library(psych)
tabla_resumen <- psych::describeBy(Ingreso_Anual)
psych::describeBy(Ingreso_Anual,group=Sexo) # separado por categorías
library(openxlsx)
write.xlsx(tabla_resumen, "tablaresumen.xlsx") #en xlsx
library(openxlsx)
write.xlsx(tabla_resumen, "tablaResumen.xlsx") #en xlsx
write.xlsx(tabla_resumen$mean, "tablaResumen.xlsx") #en xlsx
mayores <- base[Edad > 60, ]
suc_A <- base[Sucursal=="A", ]
sucursal_A_60 <- filter(base, Sucursal == "A", Edad > 60)
sucursal_A_60 <- filter(base, Sucursal == "A", Edad > 60)
#Filtro:forma 2
library(dplyr)
sucursal_A <- filter(base, Sucursal == "A") #selecciona solo sucursal A
sucursal_A_60 <- filter(base, Sucursal == "A", Edad > 60)
setwd("d:/dev/Estadistica/Taller 3  - ejemplo gráficos (script)-20240516")
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte1") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
setwd("d:/dev/Estadistica/Taller 3  - ejemplo gráficos (script)-20240516")
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte1") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
##############  HISTOGRAMA  ##############
hist(Ingreso_Anual)
hist(Ingreso_Anual)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20) #rayado de la barra
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20) #rayado de la barra
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",col="green",density=20,freq=FALSE) #entrega la probabilidad de densidad
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20) #rayado de la barra
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",col="green",density=20,freq=FALSE) #entrega la probabilidad de densidad
setwd("d:/dev/Estadistica/Taller 3  - ejemplo gráficos (script)-20240516")
#setwd("C:/Users/caroh/Documents/RStudio/Clases/Clase 3") #Definición de directorio de trabajo
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte1") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
##############  HISTOGRAMA  ##############
hist(Ingreso_Anual)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20) #rayado de la barra
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",col="green",density=20,freq=FALSE) #entrega la probabilidad de densidad
#recordatorio de como guardar gráficos
png(filename = paste0(getwd(),"Histograma.png"), width = 800, height=600)#para crear archivo png
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
dev.off() #para cerrarla funcion decrear archivo png
paste0(getwd(),"Histograma.png")
setwd("d:/dev/Estadistica/Taller 3  - ejemplo gráficos (script)-20240516/")
#setwd("C:/Users/caroh/Documents/RStudio/Clases/Clase 3") #Definición de directorio de trabajo
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte1") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
##############  HISTOGRAMA  ##############
hist(Ingreso_Anual)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20) #rayado de la barra
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",col="green",density=20,freq=FALSE) #entrega la probabilidad de densidad
#recordatorio de como guardar gráficos
png(filename = paste0(getwd(),"Histograma.png"), width = 800, height=600)#para crear archivo png
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
dev.off() #para cerrarla funcion decrear archivo png
#recordatorio de como guardar gráficos
png(filename = paste0(getwd(),"Histograma.png"), width = 800, height=600)#para crear archivo png
getwd()
paste0(getwd(),"/", "Histograma.png")
setwd("d:/dev/Estadistica/Taller 3  - ejemplo gráficos (script)-20240516/")
#setwd("C:/Users/caroh/Documents/RStudio/Clases/Clase 3") #Definición de directorio de trabajo
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte1") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
##############  HISTOGRAMA  ##############
hist(Ingreso_Anual)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20) #rayado de la barra
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",col="green",density=20,freq=FALSE) #entrega la probabilidad de densidad
#recordatorio de como guardar gráficos
png(filename = paste0(getwd(),"/", "Histograma.png"), width = 800, height=600)#para crear archivo png
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
dev.off() #para cerrarla funcion decrear archivo png
library(ggplot2)
ggplot(base,aes(x=Ingreso_Anual))+geom_histogram()
library(ggplot2)
ggplot(base,aes(x=Ingreso_Anual))+geom_histogram()
setwd("d:/dev/Estadistica/Taller 3  - ejemplo gráficos (script)-20240516/")
ggplot(base,aes(x=Ingreso_Anual,color=Sexo))+geom_histogram()
ggplot(base) +
geom_histogram(aes(x=Ingreso_Anual))
ggplot(base,aes(x=Ingreso_Anual,color=Sexo))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.1) #transparencia
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10) #10 clases o rangos
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10) #10 clases o rangos
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=20) #10 clases o rangos
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10) #10 clases o rangos
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10, binwidth=5000) #ancho de barra
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(apha=0.3,bins=10,binwidth=5000, position = "identity")
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10,binwidth=5000, position = "stack")
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10,binwidth=5000, position = "stack") + theme(legend.position = "bottom")
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
#interactivo
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
##############  Barras  ##############
t1 <- table(Sucursal)
t2 <- round(prop.table(t1)*100,1) #frecuencia relativa porcentual
barplot(t2, col= "lightblue", main="Sucursales (%)", xlab = "Sucursales", ylab="%")
##############  Barras  ##############
t1 <- table(Sucursal)
t2 <- round(prop.table(t1)*100,1) #frecuencia relativa porcentual
barplot(t2, col= "lightblue", main="Sucursales (%)", xlab = "Sucursales", ylab="%")
barplot(t1,legend.text=rownames(t1), main="Barras",ylab ="Frecuencias", font.axis=5) #leyenda y titulo y nombre eje y y cambio fuente
barplot(t1,legend.text=rownames(t1),main="Barras",ylab ="Frecuencias",col=rainbow(4)) #color de las barras
barplot(t1,legend.text=rownames(t1),main="Barras",ylab ="Frecuencias", col=rainbow(4),ylim=c(0,300), xlim=c(0,5)) #limites eje y. xlim=tamaño eje x
barplot(t1,legend.text=rownames(t1), main="Barras",ylab ="Frecuencias", font.axis=5) #leyenda y titulo y nombre eje y y cambio fuente
barplot(t1,legend.text=rownames(t1), main="Barras",ylab ="Frecuencias", font.axis=5) #leyenda y titulo y nombre eje y y cambio fuente
barplot(t1,legend.text=rownames(t1),main="Barras",ylab ="Frecuencias",col=rainbow(4)) #color de las barras
barplot(t1,legend.text=rownames(t1),main="Barras",ylab ="Frecuencias",col=rainbow(5)) #color de las barras
?barplot
t3<- table(Sucursal,Sexo)
barplot(t3,beside=TRUE,legend.text=rownames(t2),col=rainbow(4)) #beside para apilar
barplot(t3,beside=FALSE,legend.text=rownames(t2),col=rainbow(4))
barplot(t3,beside=TRUE,legend.text=rownames(t2),col=rainbow(4)) #beside para apilar
barplot(t3,beside=T,col=rainbow(4) , xlim = c(0,15))
barplot(t3,beside=T,col=rainbow(4) , xlim = c(0,15))
legend("topright", legend = rownames(t2), fill = rainbow(4))
legend("topright", legend = rownames(t2), fill = rainbow(4))
ggplot(base,aes(x=Sexo,fill=Sucursal))+
geom_bar()
ggplot(base,aes(x=Sexo,fill=Sucursal))+
geom_bar()
ggplot(base,aes(x=Sexo,fill=Sucursal))+
geom_bar(width=0.8)+
theme_light()
#Otro tipo de graf barras
ggplot(base,aes(x=Sexo,fill=Sucursal))+
geom_bar(position = "dodge")
ggplot(base,aes(x=Sexo,fill=Sucursal))+
geom_bar()
#Otro tipo de graf barras
ggplot(base,aes(x=Sexo,fill=Sucursal))+
geom_bar(position = "dodge")
ggplot(base,aes(x=Sexo,fill=Sucursal))+
geom_bar(position = "dodge", width=0.8)+
theme_dark()
library(dplyr)
#interactivo
library(dplyr)
tabla_plot <- data.frame(
Sucursales = names(table(Sucursal)),
Total = as.numeric(table(Sucursal)),
Masc = as.numeric(table(Sucursal[Sexo == "Masc"])),
Fem = as.numeric(table(Sucursal[Sexo == "Fem"])))
#crea una nueva tabla donde Sucursales es una columna con los nombres que aparece en "Sucursales" de la base1. estructura de datos de dos dimesiones, as.numeric = convertir a numero
#otra columna es Total y coloca el total de surcursales de acuerdo a cada tipo, luego dos columnas mas con el total de acuerdo a masc o femenino
plot_ly(data = tabla_plot, x = ~Sucursales, y = ~Masc, type = "bar", name = "Masc") %>%
add_trace(y = ~Fem, name = "Fem") %>%
layout(yaxis = list(title = "Personas"))
##############  CIRCULAR  ##############
pie(t2, main="Sucursales", clockwise = FALSE, labels = paste0(t2, "%")) # FALSE = dirección contraria al reloj
pie(t2, main="Sucursales", clockwise = FALSE, labels = paste0(t2, "%")) # FALSE = dirección contraria al reloj
pie(t2, main="Sucursales", clockwise = TRUE,labels = paste0(t2, "%"))  # TRUE = dirección sentido reloj
pie(t2, main="Sucursales", clockwise = TRUE, labels = paste0(rownames(t2), " = ", paste0(t2, "%")) )
pie(t2, main="Sucursales", clockwise = TRUE, labels = paste0(rownames(t2), " = ", paste0(t2, "%")) ) #agrega leyenda en cada seccion
library(plotrix)
pie3D(t2, main="Sucursales", labels =  paste0(rownames(t2), " = ", paste0(t2, "%")))
pie3D(t2, main="Sucursales", labels =  paste0(rownames(t2), " = ", paste0(t2, "%")),explode =0.1)  # explode = separa los sectores
pie3D(t2, main="Sucursales", labels =  paste0(rownames(t2), " = ", paste0(t2, "%")))
pie3D(t2, main="Sucursales", labels =  paste0(rownames(t2), " = ", paste0(t2, "%")),explode =0.1)  # explode = separa los sectores
pie3D(t2, main="Sucursales", labels =  paste0(rownames(t2), " = ", paste0(t2, "%")),explode =0.2)  # explode = separa los sectores
pie3D(t2, main="Sucursales", labels =  paste0(rownames(t2), " = ", paste0(t2, "%")),explode =0.2, labelcex=1.2)  # explode = separa los sectores
pie3D(t2, main="Sucursales", labels =  paste0(rownames(t2), " = ", paste0(t2, "%")),explode =0.2, labelcex=1.2, radius=1.2)  # explode = separa los sectores
pie3D(t2, main="Sucursales", labels =  paste0(rownames(t2), " = ", paste0(t2, "%")),explode =0.2, labelcex=1.2, radius=1.6)  # explode = separa los sectores
pie3D(t2, main="Sucursales", labels =  paste0(rownames(t2), " = ", paste0(t2, "%")),explode =0.2, labelcex=1.2, radius=1.3)  # explode = separa los sectores
##############  DE CAJA  ##############
boxplot(Ingreso_Anual, horizontal=TRUE, main="Distribución de Ingresos", col="green")
boxplot(Ingreso_Anual ~ Sexo, col="lightblue", main="Distribución de Ingresos") #conrespecto a otra variable
boxplot(Ingreso_Anual ~ Sexo, col="cyan", main="Distribución de Ingresos", horizontal=TRUE)#horizontal
#otro tipo de graf de caja
ggplot(base,aes(x = Sexo, y = Ingreso_Anual, fill = Sexo)) + geom_boxplot()
#otro tipo de graf de caja
ggplot(base,aes(x = Sexo, y = Ingreso_Anual, fill = Sexo)) + geom_boxplot()
ggplot(base,aes(x = Sexo, y = Ingreso_Anual, fill = Sexo)) +
geom_boxplot(outlier.colour="red") +
stat_summary(fun.y = "mean", geom = "point", shape = 20, size = 3)+
ggtitle("Grafico de cajas") +
xlab("Sexo") +
ylab("Ingreso anual") +
theme_bw()
geom_text(data = outliers, aes(label = round(Ingreso_Anual, 2)),
position = position_jitter(width = 0.2), vjust = -0.5, color = "black")
ggplot(base,aes(x = Sexo, y = Ingreso_Anual, fill = Sexo)) +
geom_boxplot(outlier.colour="red") +
stat_summary(fun.y = "mean", geom = "point", shape = 20, size = 3)+
ggtitle("Grafico de cajas") +
xlab("Sexo") +
ylab("Ingreso anual") +
theme_bw()    # size = tamaño legenda
#interactivo
plot_ly(data = base, x = ~Sexo, y = ~Ingreso_Anual, type = "box")
plot_ly(data = base, x = ~Sexo, y = ~Ingreso_Anual, type = "box")
plot_ly(data = base, x = ~Sexo, y = ~Ingreso_Anual, type = "box")
#interactivo
plot_ly(data = base, x = ~Sexo, y = ~Ingreso_Anual, type = "box")
library(vioplot)
vioplot(Ingreso_Anual ~Sexo, col ="magenta", main="Distribución de Ingresos")
