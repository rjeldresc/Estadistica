getwd()
setwd("d:/dev/Estadistica")
getwd()
data_frame <- data.frame(
Nombre = c("Juan", "María", "Carlos"),
Edad = c(25, 30, 28),
Ciudad = c("Ciudad de México", "Madrid", "Buenos Aires"),
Puntaje = c(80, 75, 90)
)
setwd("d:/dev/Estadistica")
getwd()
library(readxl)
setwd("d:/dev/Estadistica")
getwd()
library(readxl)
library(readxl)
library(openxlsx)
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte1") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
?read_excel
setwd("d:/dev/Estadistica")
getwd()
library(readxl)
library(openxlsx)
readxl::read_excel()
base <- readxl::read_excel("Base_de_datos_1.xlsx") #Importar y definir base de datos
setwd("d:/dev/Estadistica")
getwd()
library(readxl)
library(openxlsx)
readxl::read_excel()
View(base)
base <- readxl::read_excel(path = "Base_de_datos_1.xlsx") #Importar y definir base de datos
base <- readxl::read_excel(path = "Base_de_datos_1.xlsx") #Importar y definir base de datos
base <- readxl::read_excel(file.choose())
base <- readxl::read_excel(file.choose())
head(base)
tail(base)
head(base)
names(base)
colnames(base)
colnames(base)
colnames(base)[4]
colnames(base)["Bienes"]
colnames(base)
summary(base)
summary(base)
as.factor(base$Bienes)
base$Bienes <- as.factor(base$Bienes)
base
summary(base)
summary(base)
base$Bienes <- as.factor(base$Bienes)
base$Solicitud <- as.factor(base$Solicitud)
summary(base)
base$Sucursal <- as.factor(base$Sucursal)
summary(base)
summary(base)
View(base)
base[base$Sexo == "1"]
base[base$Sexo == 1]
base$Sexo == 1
base[,base$Sexo == 1]
base[base$Sexo == 1,]
base[base$Sexo == 1,"Sexo"]
genero <- base$Sexo
genero
summary(base)
base$Sexo <- as.factor(base$Sexo)
summary(base)
base <- readxl::read_excel(file.choose()) #aparece un cuadro de dialogo para buscar el archivo
base <- readxl::read_excel(path = "Base_de_datos_1.xlsx") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
base$Bienes <- as.factor(base$Bienes)
base$Solicitud <- as.factor(base$Solicitud)
base$Sucursal <- as.factor(base$Sucursal)
base$Sexo <- as.factor(base$Sexo)
head(base)
tail(base)
names(base)
colnames(base)
summary(base)
hist(base$Sucursal)
hist(base$Sucursal)
hist(x = base$Ingreso_Anual)
Ingreso <- base$Ingreso_Anual
openxlsx::write.xlsx(x = summary(base) , "archivo.xls")
write.table(x = summary(base), file = "summary.csv" )
write.table(x = base, file = "base.csv" )
?write.table
write.table(x = base, file = "base.csv",sep = ";" )
?write.table
?write.csv2
write.csv(x = base, file = "base_csv.csv")
write.table(x = base, file = "base.csv", sep = ";" )
write.csv(x = base, file = "base_csv.csv")
write.csv2(x = base, file = "base_csv2.csv")
write.xlsx(base, "base.xlsx")
library(openxlsx)
write.xlsx(base, "base.xlsx")
ifelse(base$Sexo == 1, "Hombre", "Mujer")
base$Genero <- ifelse(base$Sexo == 1, "Hombre", "Mujer")
write.csv2(x = base, file = "base_csv2.csv")
write.xlsx(base, "base.xlsx")
table(base$Edad)
table(base$Bienes)
class(table(base$Bienes))
table(base$Bienes, base$Sucursal)
#tabla de doble entrada
table(base$Bienes, base$Sucursal) #por columna, luego filas
#tabla de doble entrada
tabla_1 <- table(base$Bienes, base$Sucursal) #por columna, luego filas
addmargins(tabla_1)
addmargins(tabla_1) # agrega totales hacia abajo, y hacia el lado derecho (es una suma , como un total por fila y columna)
addmargins(tabla_1, margin = 1)
addmargins(tabla_1, margin = 2)
prop.table(tabla_1)
prop.table(tabla_1 , margin = 1)
addmargins(tabla_1)
prop.table(tabla_1)
prop.table(tabla_1 , margin = 1)
prop.table(tabla_1 , margin = 2)
addmargins(tabla_1)
table(base$Bienes)
tabla_1 <- table(base$Bienes, base$Sucursal)
#tabla de doble entrada
tabla_1 <- table(base$Bienes, base$Sucursal) #por columna, luego filas
tabla_1
addmargins(tabla_1)
addmargins(tabla_1)
addmargins(tabla_1, margin = 1)
addmargins(tabla_1, margin = 2)
prop.table(tabla_1)
tabla_1
prop.table(tabla_1)
prop.table(tabla_1 , margin = 1)
addmargins(tabla_1, margin = 2)
prop.table(tabla_1 , margin = 2)
addmargins(tabla_1, margin = 2)
addmargins(tabla_1, margin = 1)
prop.table(tabla_1 , margin = 1)
prop.table(tabla_1 , margin = 2)
addmargins(tabla_1)
addmargins(tabla_1, margin = 1)
prop.table(tabla_1 , margin = 1)
prop.table(tabla_1 , margin = 2)
?prop.table
?addmargins
addmargins(tabla_1)
addmargins(tabla_1, margin = 1)
prop.table(tabla_1 , margin = 2)
round(prop.table(tabla_1)*100,1)
