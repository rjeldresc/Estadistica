sd(Ingreso_Anual)    # desviación estándar
IQR(Ingreso_Anual)   # rango intercuartil
length(Ingreso_Anual)  # entrega tamaño de la columna
mean(Ingreso_Anual)  # media
median(Ingreso_Anual)# mediana
sd(Ingreso_Anual)    # desviación estándar
IQR(Ingreso_Anual)   # rango intercuartil
quantile(Ingreso_Anual) # cuartiles de una variable
var(Ingreso_Anual)  # varianza
library(psych)
library(psych)
tabla_resumen <- psych::describeBy(Ingreso_Anual)
psych::describeBy(Ingreso_Anual,group=Sexo) # separado por categorías
library(openxlsx)
write.xlsx(tabla_resumen, "tablaresumen.xlsx") #en xlsx
setwd("d:/dev/Estadistica")
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte1")
setwd("d:/dev/Estadistica")
#setwd("C:/Users/caroh/Documents/RStudio/Clases/Clase 3") #Definición de directorio de trabajo
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte1") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
##############  HISTOGRAMA  ##############
hist(Ingreso_Anual)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20) #rayado de la barra
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",col="green",density=20,freq=FALSE)
#recordatorio de como guardar gráficos
png(filename = paste0(getwd(),"Histograma.png"), width = 800, height=600)#para crear archivo png
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
dev.off() #para cerrarla funcion decrear archivo png
library(ggplot2)
ggplot(base,aes(x=Ingreso_Anual))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.1) #transparencia
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10) #10 clases o rangos
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10, binwidth=5000) #ancho de barra
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(apha=0.3,bins=10,binwidth=5000, position = "identity")
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10,binwidth=5000, position = "stack")
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
library(ggplot2)
ggplot(base,aes(x=Ingreso_Anual))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.1) #transparencia
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10) #10 clases o rangos
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10, binwidth=5000) #ancho de barra
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(apha=0.3,bins=10,binwidth=5000, position = "identity")
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10,binwidth=5000, position = "stack")
#interactivo
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
attach(base)
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
setwd("d:/dev/Estadistica")
#setwd("C:/Users/caroh/Documents/RStudio/Clases/Clase 3") #Definición de directorio de trabajo
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte1") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
##############  HISTOGRAMA  ##############
hist(Ingreso_Anual)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20) #rayado de la barra
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",col="green",density=20,freq=FALSE) #entrega la probabilidad de densidad
#recordatorio de como guardar gráficos
png(filename = paste0(getwd(),"Histograma.png"), width = 800, height=600)#para crear archivo png
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
dev.off() #para cerrarla funcion decrear archivo png
#otro tipo de histograma
library(ggplot2)
ggplot(base,aes(x=Ingreso_Anual))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.1) #transparencia
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10) #10 clases o rangos
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10, binwidth=5000) #ancho de barra
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(apha=0.3,bins=10,binwidth=5000, position = "identity")
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10,binwidth=5000, position = "stack")
#interactivo
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
setwd("d:/dev/Estadistica")
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte1") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte1") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
hist(Ingreso_Anual)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20) #rayado de la barra
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",col="green",density=20,freq=FALSE)
png(filename = paste0(getwd(),"Histograma.png"), width = 800, height=600)#para crear archivo png
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
png(filename = paste0(getwd(),"Histograma.png"), width = 800, height=600)#para crear archivo png
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
dev.off() #para cerrarla funcion decrear archivo png
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte1") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
##############  HISTOGRAMA  ##############
hist(Ingreso_Anual)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20) #rayado de la barra
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",col="green",density=20,freq=FALSE) #entrega la probabilidad de densidad
#recordatorio de como guardar gráficos
png(filename = paste0(getwd(),"Histograma.png"), width = 800, height=600)#para crear archivo png
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
dev.off() #para cerrarla funcion decrear archivo png
setwd("d:/dev/Estadistica/")
#setwd("C:/Users/caroh/Documents/RStudio/Clases/Clase 3") #Definición de directorio de trabajo
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte1") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
##############  HISTOGRAMA  ##############
hist(Ingreso_Anual)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20) #rayado de la barra
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",col="green",density=20,freq=FALSE) #entrega la probabilidad de densidad
#recordatorio de como guardar gráficos
png(filename = paste0(getwd(),"Histograma.png"), width = 800, height=600)#para crear archivo png
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
dev.off() #para cerrarla funcion decrear archivo png
library(ggplot2)
ggplot(base,aes(x=Ingreso_Anual))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.1) #transparencia
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10) #10 clases o rangos
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10, binwidth=5000) #ancho de barra
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(apha=0.3,bins=10,binwidth=5000, position = "identity")
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10,binwidth=5000, position = "stack")
#interactivo
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
library(ggplot2)
ggplot(base,aes(x=Ingreso_Anual))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.1) #transparencia
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10) #10 clases o rangos
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10, binwidth=5000) #ancho de barra
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(apha=0.3,bins=10,binwidth=5000, position = "identity")
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10,binwidth=5000, position = "stack")
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
plot_ly(base, x = ~Ingreso_Anual, type = "histogram", histnorm = 'count')
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
plot_ly(base, x = ~Ingreso_Anual, type = "histogram", histnorm = 'count')
library(ggplot2)
library(plotly)
p <- ggplot(base, aes(x = Ingreso_Anual)) + geom_histogram()
ggplotly(p)
##############  Barras  ##############
t1 <- table(Sucursal)
t2 <- round(prop.table(t1)*100,1) #frecuencia relativa porcentual
barplot(t2, col= "lightblue", main="Sucursales (%)", xlab = "Sucursales", ylab="%")
barplot(t1,legend.text=rownames(t1), main="Barras",ylab ="Frecuencias", font.axis=5) #leyenda y titulo y nombre eje y y cambio fuente
barplot(t1,legend.text=rownames(t1),main="Barras",ylab ="Frecuencias",col=rainbow(4)) #color de las barras
barplot(t1,legend.text=rownames(t1),main="Barras",ylab ="Frecuencias", col=rainbow(4),ylim=c(0,300), xlim=c(0,5))
plot_ly(base, x = ~Ingreso_Anual, type = "histogram") %>%
layout(title = "Histograma de Ingreso Anual",
xaxis = list(title = "Ingreso Anual"),
yaxis = list(title = "Frecuencia"))
setwd("d:/dev/Estadistica/")
setwd("d:/dev/Estadistica/")
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte1") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
t1 <- table(Sucursal)
t2 <- round(prop.table(t1)*100,1) #frecuencia relativa porcentual
barplot(t2, col= "lightblue", main="Sucursales (%)", xlab = "Sucursales", ylab="%")
barplot(t1,legend.text=rownames(t1), main="Barras",ylab ="Frecuencias", font.axis=5) #leyenda y titulo y nombre eje y y cambio fuente
barplot(t1,legend.text=rownames(t1),main="Barras",ylab ="Frecuencias",col=rainbow(4)) #color de las barras
barplot(t1,legend.text=rownames(t1),main="Barras",ylab ="Frecuencias", col=rainbow(4),ylim=c(0,300), xlim=c(0,5))
t3<- table(Sucursal,Sexo)
barplot(t3,beside=TRUE,legend.text=rownames(t2),col=rainbow(4)) #beside para apilar
barplot(t3,beside=FALSE,legend.text=rownames(t2),col=rainbow(4))
ggplot(base,aes(x=Sexo,fill=Sucursal))+geom_bar()
ggplot(base,aes(x=Sexo,fill=Sucursal))+geom_bar(width=0.8)+theme_light()
tabla_plot <- data.frame(
Sucursales = names(table(Sucursal)),
Total = as.numeric(table(Sucursal)),
Masc = as.numeric(table(Sucursal[Sexo == "Masc"])),
Fem = as.numeric(table(Sucursal[Sexo == "Fem"])))
tabla_plot <- data.frame(
Sucursales = names(table(Sucursal)),
Total = as.numeric(table(Sucursal)),
Masc = as.numeric(table(Sucursal[Sexo == "Masc"])),
Fem = as.numeric(table(Sucursal[Sexo == "Fem"])))
plot_ly(data = tabla_plot, x = ~Sucursales, y = ~Masc, type = "bar", name = "Masc") %>%
add_trace(y = ~Fem, name = "Fem") %>%
layout(yaxis = list(title = "Personas"))
##############  CIRCULAR  ##############
pie(t2, main="Sucursales", clockwise = FALSE, labels = paste0(t2, "%")) # FALSE = dirección contraria al reloj
pie(t2, main="Sucursales", clockwise = TRUE,labels = paste0(t2, "%"))  # TRUE = dirección sentido reloj
pie(t2, main="Sucursales", clockwise = TRUE, labels = paste0(rownames(t2), " = ", paste0(t2, "%")) )
pie(t2, main="Sucursales", clockwise = FALSE, labels = paste0(t2, "%"))
pie(t2, main="Sucursales", clockwise = TRUE,labels = paste0(t2, "%"))
pie(t2, main="Sucursales", clockwise = TRUE, labels = paste0(rownames(t2), " = ", paste0(t2, "%")) )
library(plotrix)
pie3D(t2, main="Sucursales", labels =  paste0(rownames(t2), " = ", paste0(t2, "%")))
pie3D(t2, main="Sucursales", labels =  paste0(rownames(t2), " = ", paste0(t2, "%")),explode =0.1)
plot_ly(data = tabla_plot, labels = ~Sucursales, values = ~Total, type = "pie")
##############  DE CAJA  ##############
boxplot(Ingreso_Anual, horizontal=TRUE, main="Distribución de Ingresos", col="green")
boxplot(Ingreso_Anual ~ Sexo, col="lightblue", main="Distribución de Ingresos") #conrespecto a otra variable
boxplot(Ingreso_Anual ~ Sexo, col="lightblue", main="Distribución de Ingresos") #conrespecto a otra variable
boxplot(Ingreso_Anual ~ Sexo, col="cyan", main="Distribución de Ingresos", horizontal=TRUE)#horizontal
boxplot
##############  DE CAJA  ##############
boxplot(Ingreso_Anual, horizontal=TRUE, main="Distribución de Ingresos", col="green")
boxplot(Ingreso_Anual ~ Sexo, col="cyan", main="Distribución de Ingresos", horizontal=TRUE)#horizontal
#otro tipo de graf de caja
ggplot(base,aes(x = Sexo, y = Ingreso_Anual, fill = Sexo)) + geom_boxplot(outlier.colour="red") +
stat_summary(fun.y = "mean", geom = "point", shape = 20, size = 3)+
ggtitle("Grafico de cajas") +  xlab("Sexo") +  ylab("Ingreso anual") +
theme_bw()    # size = tamaño legenda
plot_ly(data = base, x = ~Sexo, y = ~Ingreso_Anual, type = "box")
library(plotly)
library(tidyr)
library(plyr)
plot_ly(data = base, x = ~Sexo, y = ~Ingreso_Anual, type = "box")
pl <- plot_ly(data = base, x = ~Sexo, y = ~Ingreso_Anual, type = "box")
pl
pl <- plot_ly(data = base, x = ~Sexo, y = ~Ingreso_Anual, type = "box")
pl
ggplot(base,aes(x = Sexo, y = Ingreso_Anual, fill = Sexo)) + geom_boxplot(outlier.colour="red") +
stat_summary(fun.y = "mean", geom = "point", shape = 20, size = 3)+
ggtitle("Grafico de cajas") +  xlab("Sexo") +  ylab("Ingreso anual") +
theme_bw()
library(vioplot)
vioplot(Ingreso_Anual ~Sexo, col ="magenta", main="Distribución de Ingresos")
vioplot(Ingreso_Anual ~Sexo, col ="magenta", main="Distribución de Ingresos", horizontal=TRUE)
vioplot(Ingreso_Anual ~Sexo, col ="magenta", main="Distribución de Ingresos")
vioplot(Ingreso_Anual ~Sexo, col ="magenta", main="Distribución de Ingresos", horizontal=TRUE)
#otro tipo de violin
ggplot(base,aes(x = Sexo, y = Ingreso_Anual, fill = Sexo)) + geom_violin() +
geom_boxplot(outlier.colour = "red", width = 0.1) +
theme_linedraw()   # width = tamaño gráfico de caja
#interactivo
plot_ly(data = base, x = ~Sexo, y = ~Ingreso_Anual, type = "violin",
box = list(visible = T))
plot_ly
plot_ly
plot_ly(data = base, x = ~Sexo, y = ~Ingreso_Anual, type = "violin",
box = list(visible = T))
plot(Edad, Ingreso_Anual, pch = 0) #x,y
plot(Edad, Ingreso_Anual, pch =20) #pch mas grande el numero mas pequeño
plot (Edad, Ingreso_Anual, pch = 19,col=as.factor(Sexo)) #color separado por sexo
legend("topleft", legend = levels(as.factor(Sexo)), fill=as.factor(Sexo))
##############  DISPERSION  ##############
plot(Edad, Ingreso_Anual, pch = 0) #x,y
plot(Edad, Ingreso_Anual, pch =20) #pch mas grande el numero mas pequeño
legend("topleft", legend = levels(as.factor(Sexo)), fill=as.factor(Sexo))
#otro tipo de graf dispersion
ggplot(base,aes(x = Edad, y = Ingreso_Anual)) + geom_point() + theme_bw()  # fondo blanco
ggplot(base,aes(x = Edad, y = Ingreso_Anual)) + geom_point() + theme_bw()   #separado por sexo
ggplot(base,aes(x = Edad, y = Ingreso_Anual)) + geom_point() + theme_linedraw()  # agrega cuadrícula en el fondo
ggplot(base,aes(x = Edad, y = Ingreso_Anual)) + geom_point() + theme_dark()  # agrega color en el fondo
##############  DENSIDADES  ##############
ggplot(base,aes(Ingreso_Anual, fill=Sexo)) + geom_density(alpha=0.7)
ggplot(base,aes(Ingreso_Anual, fill=Crédito)) + geom_density(alpha=0.7)
ggplot(base,aes(Ingreso_Anual, fill=Bienes)) + geom_density(alpha=0.7)
ggplot(base,aes(Ingreso_Anual, fill=Sucursal)) + geom_density(alpha=0.7)
##############  TODAS LAS VARIABLES  ##############
library(GGally)
GGally::ggpairs(base)
setwd("d:/dev/Estadistica/")
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte2") #Importar y definir base de datos
attach(base)
##############  MATRIZ DE DISPERSIONES  ##############
pairs(base[,c(5,3:4)], pch=19,gap = 1, upper.panel= panel.smooth, lower.panel = NULL)
correlaciones <- cor(base[c(5,3:4)]) #permite calcular el coeficiente de correlación de Pearson, Kendall o Spearman para dos variables cuantitativas.
corrplot::corrplot(correlaciones, type="lower")
corrplot::corrplot(correlaciones, type="lower", method = "square")
corrplot::corrplot(correlaciones, type="lower", method = "number")
corrplot::corrplot(correlaciones, type="lower")
corrplot::corrplot(correlaciones, type="lower", method = "square")
corrplot::corrplot(correlaciones, type="lower", method = "number")
##############  TODAS LAS VARIABLES  ##############
GGally::ggpairs(base)
GGally::ggpairs(base[,c(5,3:4)])
library(ggplot2)
library(ggridges)
ggplot(base, aes(x = Densidad, y = Octanaje)) +
geom_density_ridges()
setwd("d:/dev/Estadistica/")
#setwd("C:/Users/caroh/Documents/RStudio/Clases/Clase 3") #Definición de directorio de trabajo
base <- readxl::read_excel("Base_taller3.xlsx", sheet = "Parte3") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
##############  DENSIDADES EN DIFERENTES NIVELES  ##############
library(ggplot2)
library(ggridges)
ggplot(base, aes(x = Densidad, y = Octanaje)) +
geom_density_ridges()
setwd("d:/dev/Estadistica/")
#setwd("C:/Users/caroh/Documents/RStudio/Clases/Clase 3") #Definición de directorio de trabajo
base <- readxl::read_excel("Base_taller3.xlsx", sheet = "Parte3") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
##############  DENSIDADES EN DIFERENTES NIVELES  ##############
library(ggplot2)
library(ggridges)
ggplot(base, aes(x = Densidad, y = Octanaje)) +
geom_density_ridges()
ggplot(base, aes(x = Densidad, y = Octanaje, fill = Octanaje)) +
geom_density_ridges(scale = 3)    # scale separa las densidades
# fill agrega color a cada densidad
ggplot(base, aes(x = Densidad, y = Octanaje, fill= Octanaje)) +
geom_density_ridges(scale = 0.5, quantile_lines = TRUE,quantiles = 2) # agrega mediana
ggplot(base, aes(x = Densidad, y = Octanaje, fill= Octanaje)) +
geom_density_ridges(scale = 0.5, quantile_lines = TRUE) # agrega cuartiles
GGally::ggpairs(base)
GGally::ggpairs(base[,c(5,3:4)])
library(GGally)
GGally::ggpairs(base)
library(fmsb)
setwd("d:/dev/Estadistica/")
#setwd("C:/Users/caroh/Documents/RStudio/Clases/Clase 3") #Definición de directorio de trabajo
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte4") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
##############  RADAL  ##############
Grupo <- c("Mat", "Leng","Hist","Ingl")
radarchart(base,title="Notas", plwd = 1, col=1:4)
legend("topright",legend = paste(Grupo),bty = "n", pch = 20,
text.col = "grey25", pt.cex = 1, col=1:4)    # pt.cex = es el tamaño de circulo en la legenda
radarchart(base4, vlcex= 2, title="Notas", col=1:4)   # vlcex cambia tamaño de etiqueta circulo
radarchart(base, vlcex= 2, title="Notas", col=1:4)   # vlcex cambia tamaño de etiqueta circulo
library(fmsb)
setwd("d:/dev/Estadistica/")
#setwd("C:/Users/caroh/Documents/RStudio/Clases/Clase 3") #Definición de directorio de trabajo
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte4") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
##############  RADAL  ##############
Grupo <- c("Mat", "Leng","Hist","Ingl")
radarchart(base,title="Notas", plwd = 1, col=1:4)
legend("topright",legend = paste(Grupo),bty = "n", pch = 20,
text.col = "grey25", pt.cex = 1, col=1:4)    # pt.cex = es el tamaño de circulo en la legenda
radarchart(base, vlcex= 2, title="Notas", col=1:4)   # vlcex cambia tamaño de etiqueta circulo
legend("topright",legend = paste(Grupo), bty = "n", pch = 20,
text.col = "grey25", pt.cex = 1,col=1:4)
radarchart(base,title="Notas", plwd = 1, col=1:4)
legend("topright",legend = paste(Grupo),bty = "n", pch = 20,
text.col = "grey25", pt.cex = 1, col=1:4)    # pt.cex = es el tamaño de circulo en la legenda
radarchart(base, vlcex= 2, title="Notas", col=1:4)   # vlcex cambia tamaño de etiqueta circulo
legend("topright",legend = paste(Grupo), bty = "n", pch = 20,
text.col = "grey25", pt.cex = 1,col=1:4)
library(ggplot2)
#install.packages("ggthemes")
library(ggthemes)
#install.packages("MASS") #lineas paralelas
#install.packages("aplpack") #tallo y hoja
library(aplpack)
setwd("d:/dev/Estadistica/")
#setwd("C:/Users/caroh/Documents/RStudio/Clases/Clase 3") #Definición de directorio de trabajo
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte5") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
base$I1=as.numeric(base$I1) #para cambiar naturaleza delobjeto
base$I3=as.numeric(base$I3)  # no incluye datos no numéricos
attach(base) #para reconocer por el nombre las columanas importadas
datos1 <- base[, 3:6]
library(MASS)
parcoord(datos1)
parcoord(datos1, var.label = TRUE)    #agrega mínimos y máximos
cols <- as.factor(Sexo) #transforma a una nueva categoria para poder clasificar
parcoord(datos1, var.label = TRUE, col=cols)   # solo? dos colores (sexo)
legend("topleft", legend = levels(as.factor(Sexo)))
datos2 <- base[, 3:6]
parcoord(datos2)
parcoord(datos2, var.label = TRUE)    #agrega mínimos y máximos
cols <- as.factor(Num_alumno)
parcoord(datos2, var.label = TRUE, col=cols) # un color por alumno
ggplot(base, aes(x =I2)) +geom_dotplot()
ggplot(base, aes(x =I2)) +geom_dotplot(fill = "steelblue")
install.packages("aplpack")
library(aplpack)
datos1 <- c(12, 15, 16, 21, 24, 29, 30, 31, 32, 33,
45, 46, 49, 50, 52, 58, 60, 63, 64, 68)
datos2 <- c(12, 15, 16, 22, 24, 29, 29, 31, 32, 33,
45, 46, 49, 50, 52, 58, 59, 63, 64, 65,73,75)
#Tallo y hoja simple
stem(datos1, scale = 2)
stem(datos2, scale = 2)
#Tallo y hoja comparativo
stem.leaf.backback(datos1, datos2)  # tallo y hoja comparativo # simétricos
stem.leaf.backback(datos1, datos2, back.to.back = FALSE) # uno al lado del otro
library(ggplot2)
setwd("d:/dev/Estadistica/")
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte7") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
##############  DIAGRAMA DE STANKEY  ##############
library(ggalluvial)
ggplot(base,aes(axis1 = Sexo, axis2 = Person, axis3 = Area, y = frec)) +
geom_alluvium(aes(fill = Person)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Encuesta", "Respuesta"),
expand = c(0.10, 0.05)) +
theme_void()
library(ggalluvial)
ggplot(base,aes(axis1 = Sexo, axis2 = Person, axis3 = Area, y = frec)) +
geom_alluvium(aes(fill = Person)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Encuesta", "Respuesta"),
expand = c(0.10, 0.05)) +
theme_void()
library(ggalluvial)
ggplot(base,aes(axis1 = Sexo, axis2 = Person, axis3 = Area, y = frec)) +
geom_alluvium(aes(fill = Person)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Encuesta", "Respuesta"),
expand = c(0.10, 0.05)) +
theme_void()
ggplot(base,aes(axis1 = Sexo, axis2 = Person, axis3 = Area, y = frec)) +
geom_alluvium(aes(fill = Person)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Encuesta", "Respuesta"),
expand = c(0.10, 0.05)) +
theme_void()
library(ggplot2)
#install.packages("ggmosaic")
library(ggmosaic)
setwd("d:/dev/Estadistica/")
#setwd("C:/Users/caroh/Documents/RStudio/Clases/Clase 3") #Definición de directorio de trabajo
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte8a") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
##############  GRÁFICO MARIMEKKO (MOSAICO)  ##############
ggplot(base) +
geom_mosaic(aes(x = product(Area,Sexo)), fill = "lightblue",color = "black")
ggplot(base) +
geom_mosaic(aes(x = product(Area, Sexo), fill = Area))
#otro ejemplo
base2 <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte8b")
attach(base2)
ggplot(base2) +
geom_mosaic(aes(x = product(Afecta, Región), fill = Afecta))
library(GGally)
GGally::ggpairs(base)
setwd("d:/dev/Estadistica/")
#setwd("C:/Users/caroh/Documents/RStudio/Clases/Clase 3") #Definición de directorio de trabajo
base <- readxl::read_excel("Base_Taller3.xlsx", sheet = "Parte1") #Importar y definir base de datos
attach(base) #para reconocer por el nombre las columanas importadas
##############  HISTOGRAMA  ##############
hist(Ingreso_Anual)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green")
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20) #rayado de la barra
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",col="green",density=20,freq=FALSE) #entrega la probabilidad de densidad
#recordatorio de como guardar gráficos
png(filename = paste0(getwd(),"Histograma.png"), width = 800, height=600)#para crear archivo png
hist(Ingreso_Anual,main="Histograma",xlab="Ingresos",ylab="Frecuencia",col="green",density=20,freq=TRUE)
dev.off() #para cerrarla funcion decrear archivo png
#otro tipo de histograma
library(ggplot2)
ggplot(base,aes(x=Ingreso_Anual))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram()
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.1) #transparencia
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10) #10 clases o rangos
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10, binwidth=5000) #ancho de barra
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(apha=0.3,bins=10,binwidth=5000, position = "identity")
ggplot(base,aes(x=Ingreso_Anual,color=Sexo,fill=Sexo))+geom_histogram(alpha=0.3,bins=10,binwidth=5000, position = "stack")
#interactivo
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
fig <- plot_ly(x = ~rnorm(50), type = "histogram")
fig
library(plotly)
fig <- plot_ly(x = ~rnorm(50), type = "histogram")
fig
library(plotly)
fig <- plot_ly(x = ~rnorm(50), type = "histogram")
fig
plot_ly(data = base, x = ~Sexo, y = ~Ingreso_Anual, type = "box")
library(plotly)
plot_ly(base, x = ~Ingreso_Anual, type = "histogram")
library(plotly)
fig <- plot_ly(x = ~rnorm(50), type = "histogram")
fig
