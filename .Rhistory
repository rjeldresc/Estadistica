install.packages(c("dplyr", "ggplot2"))
install.packages("purrr")
install.packages("tidyr")
install.packages("shiny")
install.packages("tidyverse")
install.packages(c("readxl", "openxlsx", "httr", "jsonlite"))
install.packages("broom")
install.packages("psych")
install.packages("stringi")
names(l1)
setwd("d:/dev/Estadistica")
load("D:/dev/Estadistica/CursoInicial.RData")
names(l1)[5]
names(l1)
#tambien podemos crear nuevos "slots"
#indicando el nombre en dos [[]]
l1[["nueva_persona"]] <- "Pedro"
l1
otro_numero
l1$otro_numero
l1$otro_numero <- c(1,7)
l1
str(l1)
l1$Persona$edad <- 30
l1
l1$mat
class(l1$mat)
l1$mat[4,4]
l1$mat[4,4] <- 99
l1
l1[["mat"]]
class(l1[["mat"]])
class(l1["mat"])
class(l1[["mat"]])
l1[["mat"]]
l1[["mat"]][4,4]
l1[["mat"]][4,4] <- 88
l1
l1$otro_numero <- NULL
str(l1)
l1$Persona$edad <- as.character(l1$Persona$edad)
str(l1)
x <- rnorm(1000)
y <- rnorm(1000) +2 + 3*x
plot(x,y)
modelo <- lm(y ~ x)
hist(modelo$residuals)
x <- rnorm(1000)
y <- rnorm(1000) +2 + 3*x
plot(x,y)
modelo <- lm(y ~ x)
hist(modelo$residuals)
plot(x,modelo$fitted.values)
plot(modelo)
hist(modelo$residuals)
plot(x,modelo$fitted.values)
plot(modelo)
hist(modelo$residuals)
plot(x,modelo$fitted.values)
plot(modelo)
df <- data.frame(nombre = c("Juan", "Diego", "Miguel"))
df <- data.frame(nombre = c("Juan", "Diego", "Miguel")
edad = c(25,40,33),
df <- data.frame(nombre = c("Juan", "Diego", "Miguel"),
edad = c(25,40,33),
id = 1:3
)
df
class(df)
df
str(df)
df <- data.frame(nombre = c("Juan", "Diego", "Miguel"),
edad = c(25,40,33),
id = 1:2
)
df <- data.frame(nombre = c("Juan", "Diego", "Miguel"),
edad = c(25,40,33),
id = 1:3
)
df <- data.frame(nombre = c("Juan", "Diego", "Miguel"),
edad = c(25,40,33),
id = 1:2
)
df <- data.frame(nombre = c("Juan", "Diego", "Miguel"),
edad = c(25,40,33),
id = 1:3
)
str(df)
df["nombre"]
class(df["nombre"])
df[["nombre"]]
df$nombre
df <- data.frame(nombre = c("Juan", "Diego", "Miguel"),
edad = c(25,40,33),
id = 1:3
)
str(df)
df["nombre"] #retorna un data frame
df[["nombre"]] #retorna un vector de la columna nombres
df$nombre
df[2,]
#segunda fila segunda columna
df[2,2]
df[,"edad"]
mean(df[,"edad"])
#crear columnas
df$tiene_ccte <- c(T,T,F)
#crear columnas
df$tiene_ccte <- c(T,F,T)
df
df[["nombre_mascota"]] <- c("bobi", "akira", "daenerys")
df
#podemos seleccionar mas de una columna
df[,c("nombre", "nombre_mascota")]
#pensando como una lista
df[c("nombre", "nombre_mascota")]
df[c(1,3), c("nombre", "nombre_mascota")]
data.frame("nombre" = df$nombre , "mascotas" = df$nombre_mascota)
otro_df <- data.frame("nombre" = df$nombre , "mascotas" = df$nombre_mascota)
View(otro_df)
df[,c(1,3)]
df[df$edad>30]
df[df$edad>30]
df <- data.frame(nombre = c("Juan", "Diego", "Miguel"),
edad = c(25,40,33),
id = 1:3
)
str(df)
df[df$edad>30]
str(df)
df$edad>30
df[df$edad>30,]
df <- data.frame(nombre = c("Juan", "Diego", "Miguel"),
edad = c(25,40,33),
id = 1:3
)
str(df)
df[["nombre_mascota"]] <- c("bobi", "akira", "daenerys")
df
df[df$edad>30,]
str(df)
df[df$edad>30,]
#consultando todas las columnas, donde la edad es mayor a 30
df[df$edad>30,"nombre_mascota"]
df[df$edad>30,]$nombre_mascota
#cambiar nombre de una columna
names(df)
df$tiene_ccte <- c(T,F,T)
df
names(df)
names(df)
colnames(df)
colnames(df)[4]
colnames(df)[5]
colnames(df)[5] <- "tiene_cuenta_corriente"
names(df)
names(df)
colnames(df)[5]
colnames(df$tiene_cuenta_corriente) <- "tiene_cuenta_corrientexx"
colnames(df[["tiene_cuenta_corriente"]]) <- "tiene_cuenta_corrientexx"
names(df)
#cambiar nombre de una columna
names(df) == "tiene_cuenta_corriente"
colnames(df[4]) <- "tiene_cuenta_corriente"
names(df)
names(df)[names(df) == "tiene_cuenta_corriente"] <- "tiene_TC"
names(df)
names(df)[names(df) == "tiene_cuenta_corriente"]
df
library(dbplyr)
save.image("D:/dev/Estadistica/CursoInicial.RData")
l1 <- list(num = c(11,10,22),
letra = c("a","c", "x", "y"),
palabra = "hola soy rodrigo",
mat = diag(1:5),
lista = list(nombre = "RODRIGO", edad = 39)
)
l1
save.image("D:/dev/Estadistica/CursoInicial.RData")
temp <- rnorm(n=100, mean = 21, sd =8)
temp <- rnorm(n=100, mean = 21, sd =8)
length(temp)
dia <- rep(c("L", "M", "W", "J", "V", "S", "D"), length.out = 100)
temp <- rnorm(n=100, mean = 21, sd =8)
length(temp)
dia <- rep(c("L", "M", "W", "J", "V", "S", "D"), length(temp) )
temp <- rnorm(n=100, mean = 21, sd =8)
length(temp)
dia <- rep(c("L", "M", "W", "J", "V", "S", "D"), length.out(length(temp)))
dia <- rep(c("L", "M", "W", "J", "V", "S", "D"), length.out(temp)) #length.out = 100)
dia <- rep(c("L", "M", "W", "J", "V", "S", "D"), length.out = 100) #length.out = 100)
temp <- rnorm(n=100, mean = 21, sd =8)
N <- length(temp)
dia <- rep(c("L", "M", "W", "J", "V", "S", "D"), length.out = 100)
e1 <- rep(c("E1"), N/3)
e1 <- rep(c("E1"), N/3)
e2 <- rep(c("E2"), N/3)
e3 <- rep(c("E3"), N - (length(e1) + length(e2)))
est <- c(e1, e2, e3)
#otra forma
rep(c("E1", "E2", "E3"), each = c(N/3, N/3, N/3+1))
est <- rep(c("E1", "E2", "E3"), times = c(33, 33, 34)
)
est <- rep(c("E1", "E2", "E3"), times = c(33, 33, 34))
temp <- rnorm(n=100, mean = 21, sd =8)
N <- length(temp)
dia <- rep(c("L", "M", "W", "J", "V", "S", "D"), length.out = 100)
#e1 <- rep(c("E1"), N/3)
#e2 <- rep(c("E2"), N/3)
#e3 <- rep(c("E3"), N - (length(e1) + length(e2)))
#est <- c(e1, e2, e3)
#otra forma (NO FUNCIONA)
#rep(c("E1", "E2", "E3"), each = c(N/3, N/3, N/3+1))
est <- rep(c("E1", "E2", "E3"), times = c(33, 33, 34))
temp<20
temp[temp<20]
temp<20
lluvia <- temp<20
temp<20
lluvia <- temp<20
lluvia <- temp<20
lluvia
data.frame(Temperatura = temp,
Dia_semana = dia,
Estacion = est,
Llueve = lluvia
)
precipitaciones <- data.frame(Temperatura = temp,
Dia_semana = dia,
Estacion = est,
Llueve = lluvia
)
head(precipitaciones)
head(precipitaciones, 15)
tail(precipitaciones, 15) #los ultimos 15 registros
summary(precipitaciones)
library(ggplot2)
dbinom(3, size=10, prob=0.3)
pbinom(3,size=10,prob=0.3)
1-pbinom(3,size=10,prob=0.3)
x <- c(1, 0) # secuencia de resultados posibles
p <- 0.8  # Probabilidad de éxito en un solo ensayo
prob <- dbinom(x, size = 1, prob = p)
prob_acum <- pbinom(x, size = 1, prob = p)
cbind(x,prob,prob_acum)
x <- c(1, 0) # secuencia de resultados posibles
p <- 0.8  # Probabilidad de éxito en un solo ensayo
prob <- dbinom(x, size = 1, prob = p)
prob_acum <- pbinom(x, size = 1, prob = p)
cbind(x,prob,prob_acum)
ggplot(data.frame(x, prob), aes(x = x, y = prob)) +
geom_bar(stat = "identity") +
labs(x = "Resultados posibles", y = "Probabilidad", title = "Distribución Bernoulli") +
theme_minimal()
x <- c(1, 0) # secuencia de resultados posibles
p <- 0.8  # Probabilidad de éxito en un solo ensayo
prob <- dbinom(x, size = 1, prob = p)
prob_acum <- pbinom(x, size = 1, prob = p)
cbind(x,prob,prob_acum)
ggplot(data.frame(x, prob), aes(x = x, y = prob)) +
geom_bar(stat = "identity") +
labs(x = "Resultados posibles", y = "Probabilidad", title = "Distribución Bernoulli") +
theme_minimal()
ggplot(data.frame(x, prob), aes(x = x, y = prob)) +
#geom_bar(stat = "identity") +
labs(x = "Resultados posibles", y = "Probabilidad", title = "Distribución Bernoulli") +
theme_minimal()
x <- c(1, 0) # secuencia de resultados posibles
p <- 0.8  # Probabilidad de éxito en un solo ensayo
prob <- dbinom(x, size = 1, prob = p)
prob_acum <- pbinom(x, size = 1, prob = p)
cbind(x,prob,prob_acum)
ggplot(data.frame(x, prob), aes(x = x, y = prob)) +
geom_bar(stat = "identity") +
labs(x = "Resultados posibles", y = "Probabilidad", title = "Distribución Bernoulli") +
theme_minimal()
plot(x=x, y=prob, type='h', las=1, lwd=10, main="Distribución Bernoulli",xlab="Resultados posibles",ylab="Probabilidad")
#type='h', lineas verticales
#las=1:
plot(x=x, y=prob, type='h', las=1, lwd=10, main="Distribución Bernoulli",xlab="Resultados posibles",ylab="Probabilidad")
ggplot(data.frame(x, prob), aes(x = x, y = prob)) +
geom_bar(stat = "identity") +
labs(x = "Resultados posibles", y = "Probabilidad", title = "Distribución Bernoulli") +
theme_minimal()
x <- c(1, 0) # secuencia de resultados posibles
p <- 0.8  # Probabilidad de éxito en un solo ensayo
prob <- dbinom(x, size = 1, prob = p)
prob_acum <- pbinom(x, size = 1, prob = p)
cbind(x,prob,prob_acum)
ggplot(data.frame(x, prob), aes(x = x, y = prob)) +
geom_bar(stat = "identity") +
labs(x = "Resultados posibles", y = "Probabilidad", title = "Distribución Bernoulli") +
theme_minimal()
plot(x=x, y=prob, type='h', las=1, lwd=10, main="Distribución Bernoulli",xlab="Resultados posibles",ylab="Probabilidad")
#type='h', lineas verticales
#las=
plot(x, y=prob, type='h', las=1, lwd=10, main="Distribución Bernoulli",xlab="Resultados posibles",ylab="Probabilidad")
plot(x, y=prob, type='h', las=1, lwd=10, main="Distribución Bernoulli",xlab="Resultados posibles",ylab="Probabilidad")
