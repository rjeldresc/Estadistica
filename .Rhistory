install.packages(c("dplyr", "ggplot2"))
install.packages("purrr")
install.packages("tidyr")
install.packages("shiny")
install.packages("tidyverse")
install.packages(c("readxl", "openxlsx", "httr", "jsonlite"))
install.packages("broom")
install.packages("psych")
install.packages("stringi")
library(ROSE)
install.packages("ROSE")
library(ROSE)
# loading data
data(hacide)
# check imbalance
table(hacide.train$cls)
# train logistic regression on imbalanced data
log.reg.imb <- glm(cls ~ ., data=hacide.train, family=binomial)
# use the trained model to predict test data
pred.log.reg.imb <- predict(log.reg.imb, newdata=hacide.test,
type="response")
# generate new balanced data by ROSE
hacide.rose <- ROSE(cls ~ ., data=hacide.train, seed=123)$data
# check (im)balance of new data
table(hacide.rose$cls)
# train logistic regression on balanced data
log.reg.bal <- glm(cls ~ ., data=hacide.rose, family=binomial)
# use the trained model to predict test data
pred.log.reg.bal <- predict(log.reg.bal, newdata=hacide.test,
type="response")
# check accuracy of the two learners by measuring auc
roc.curve(hacide.test$cls, pred.log.reg.imb)
roc.curve(hacide.test$cls, pred.log.reg.bal, add.roc=TRUE, col=2)
# determine bootstrap distribution of the AUC of logit models
# trained on ROSE balanced samples
# B has been reduced from 100 to 10 for time saving solely
boot.auc.bal <- ROSE.eval(cls ~ ., data=hacide.train, learner= glm,
method.assess = "BOOT",
control.learner=list(family=binomial),
trace=TRUE, B=10)
summary(boot.auc.bal)
datos <- matrix(c(40,73,28,10,9,24,14,3,46,77,31,22,33,62,36,21),4, 4)
colnames(datos)=c("Corea","Francia","Japon","USA")
rownames(datos)=c("4X4","Automovil","Camioneta","Familiar")
View(datos)
base <- as.data.frame(datos)
attach(base)
addmargins(datos)
E1<- round(prop.table(datos),2)
addmargins(E1)
E1<- round(prop.table(datos),4)
addmargins(E1)
E1<- round(prop.table(datos),40)
addmargins(E1)
E1<- round(prop.table(datos),10)
addmargins(E1)
E1<- round(prop.table(datos),6)
addmargins(E1)
E3<- round(prop.table(datos,2),2)
addmargins(E3,1)
E2<- round(prop.table(datos,1),2)
addmargins(E2,2)
datos2 <- matrix(c(50,45,30,20),2, 2)
colnames(datos2)=c("Propietario","Arrendatario")
rownames(datos2)=c("A favor","En contra")
base2 <- as.data.frame(datos2)
attach(base2)
addmargins(datos2)
A1<- round(prop.table(datos2),2)
addmargins(A1)
#Si se considera solo propietarios
A2<- round(prop.table(datos2,2),2)
addmargins(A2,1)
#Si se considera solo arrendatarios
A3<- round(prop.table(datos2,2),2)
addmargins(A3,1)
setwd("d:/dev/Estadistica")
load(file="Estudiantes.Rdata")
load(file="Estudiantes.Rdata")
load(file="Estudiantes.Rdata")
load(file="Estudiantes.Rdata")
load(file="Estudiantes.Rdata")
load(file="Estudiantes.Rdata")
setwd("d:/dev/Estadistica")
load(file="Estudiantes.Rdata")
datos <- Estudiantes[1:100,]
attach(datos)
Cuentas <- table(Sexo) #tabla de frecuencias
barplot(Cuentas,
main="Diagrama de barras",
xlab="Sexo", ylab="Frecuencias",
legend = rownames(Cuentas),
col=c("pink","blue"),
ylim = c(0, 80)
)
Cuentas <- table(Sexo)
print(Cuentas)
Cuentas
as.data.frame(Cuentas)
barplot(Cuentas,
main="Diagrama de barras",
xlab="Sexo", ylab="Frecuencias",
legend = rownames(Cuentas),
col=c("pink","blue"),
ylim = c(0, 80)
)
