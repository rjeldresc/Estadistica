install.packages(c("dplyr", "ggplot2"))
install.packages("purrr")
install.packages("tidyr")
install.packages("shiny")
install.packages("tidyverse")
install.packages(c("readxl", "openxlsx", "httr", "jsonlite"))
install.packages("broom")
install.packages("psych")
install.packages("stringi")
setwd("d:/dev/Estadistica")
load("D:/dev/Estadistica/.RData")
condicion <- v3 > 10
v3[condicion]
hist(runif(200))
#R interpreta cada elemento como una ejecucion aparte
sqrt(c(3,4,5,6,7,8))
#para manipular texto
nchar(c("hola", "soy", "yo"))
#substring substr
?substr
substr(c("hola", "soy", "yo"), 2 , 3)
length(c("hola", "soy", "yo"))
install.packages("tidyverse")
install.packages("readr")
mtcars
mtcars |>
split(mtcars$cyl) |>  # from base R
map(\(df) lm(mpg ~ wt, data = df)) |>
map(summary) %>%
map_dbl("r.squared")
data <- data.frame(a = 1:3, b = letters[1:3], c = Sys.Date() - 1:3)
data
data <- data.frame(a = 1:3, b = letters[1:3], c = Sys.Date() - 1:3)
data
data <- data.frame(a = 1:3, b = letters[1:3], c = Sys.Date() - 1:3)
data
grepl("ala", "palabra")
gsub("ala", "olo", "palabra")
gsub("hola", "xx", c("hola buen dÃ­a", "como estas", "que tal"))
library(topicmodels)
library(tidytext)
library(ggplot2)
library(dplyr)
install.packages(c("topicmodels", "tidytext"))
library(topicmodels)
library(tidytext)
library(ggplot2)
library(dplyr)
library(tidyr)
ap_documents <- tidy(ap_lda, matrix = "gamma")
matrix(c(9,10,4,6,7,8), ncol = 3 , nrow = 2)
matrix(c(9,10,4,6,7,8), ncol = 3 , nrow = 1)
matrix(c(9,10,4,6,7,8), ncol = 3 , nrow = 2)
matrix(c(9,10,4,6,7,8), ncol = 3 , nrow = 2 , byrow = T)
M <- matrix(c(9,10,4,6,7,8), ncol = 3 , nrow = 2 , byrow = T)
M
M <- matrix(c(9,10,4,6,7,8), ncol = 3 , nrow = 2 , byrow = T)
M
class(M)
dim(M)
class(dim(M))
typeof(dim(M))
dim(M)
dim(M)[2] #retorna un vector
dim(M)[2] #cantidad de columnas
nrow(M)
v2 <- seq(1,2,length.out = 5)
v1 <- 1:5
v1 <- 1:5
v2 <- seq(1,2,length.out = 5)
v1;v2
C <- cbind(v1,v2)
C
D <- rbind(v1,v2)
D
cbind(c(3,5,7), c(10,11))
cbind(c(3,5,7,6,7,8), c(10,11))
cbind(c(3,5,7,6,7,8), c(10,11,NA, NA))
cbind(c(3,5,7,6,7,8), c(10,11,NA, NA,NA, NA))
diag(c(1,2,6,9))
B
M
M[c(2,1)]
M[(2,1)]
M[2,1]
M[c(2,1)]
c(2,1)
M
M[2,1]
M[2,]
M[,3]
M[2,2] <- 99
M
names(M)
#acceso mediante names
colnames(M)
rownames(M)
rownames(M) <- C("FILA 1", "FILA 2")
rownames(M) <- c("FILA 1", "FILA 2")
rownames(M)
M
#acceso mediante names
colnames(M) <- c("Columna A", "Columna b", "Columna C")
M
paste0("fila_", 1:2)
rownames(M) <- paste0("Fila_", 1:2)
M
M
M["fila_2","Columna b"]
paste0("Columna_", 1:3)
colnames(M) <- paste0("Columna_", 1:3)
M
#para acceder mediante nombres
M["fila_2","Columna_2"]
#para acceder mediante nombres
M["Fila_2","Columna_2"]
M
#quiero obtener dos elementos de una matriz
rbind(c(F,T,F), c(F,F,t))
#quiero obtener dos elementos de una matriz
rbind(c(F,T,F), c(F,F,T))
M
#quiero obtener dos elementos de una matriz
indices <- rbind(c(F,T,F), c(F,F,T))
indices
M[indices]
t(M)
M1 <- matrix(c(1,1,2,5), ncol=2)
sumam <- M1 + M2
M1 <- matrix(c(1,1,2,5), ncol=2)
M2 <- matrix(c(1,3,5,7), ncol=2)
sumaM <- M1 + M2
sumaM
M1 <- matrix(c(1,1,2,5), ncol=2)
M2 <- matrix(c(1,3,5,7), ncol=2)
sumaM <- M1 + M2
sumaM
multiM <- M1 %*% M2
multiM
det(M2)
solve(M2) %*% M2
solve(M2) %*% M2
l1 <- list(num = c(11,10,22),
letra = c("a","c", "x", "y"),
palabra = "hola soy rodrigo",
mat = diag(1:5),
lista = list(nombre = "RODRIGO", edad = 39)
)
l1 <- list(num = c(11,10,22),
letra = c("a","c", "x", "y"),
palabra = "hola soy rodrigo",
mat = diag(1:5),
lista = list(nombre = "RODRIGO", edad = 39)
)
l1
l1$lista$nombre
library(jsonlite)
library(jsonlite)
# Convertir la lista a JSON
json_data <- toJSON(l1)
# Imprimir el JSON
cat(json_data)
l1$lista$nombre
#listas y dataframes
l1 <- list(num = c(11,10,22),
letra = c("a","c", "x", "y"),
palabra = "hola soy rodrigo",
mat = diag(1:5),
lista = list(nombre = "RODRIGO", edad = 39)
)
l1
library(jsonlite)
# Convertir la lista a JSON
json_data <- toJSON(l1)
# Imprimir el JSON
cat(json_data)
l1
str(l1)
View(l1)
l1[["letra"]]
length(l1)
names(l1)
class(l1)
typeof(l1)
l2 <- list(4, c("w", "z"))
View(l2)
l2 <- list(n2 = 4, p2 = c("w", "z")) # en este caso no tiene nombres
l1, l2
#podemos combinar listas
l3(l1, l2)
l3 <- c(l1, l2)
l3 <- c(l1, l2)
l3
View(l3)
l2 <- list(n2 = 4, p2 = c("w", "z")) # en este caso no tiene nombres
names(l2) <- c("n2", "p2") #otra forma de dar nombre a los elementos de la lista
#podemos combinar listas
l3 <- c(l1, l2)
l3
l1[1]
l1[2]
l1[c(1,2)]
l1[c(1,3)]
l1$num
l1$num[2]
l1[2]
l1[2]
l1[2][3]
class(l1[2])
l1[2]
class(l1[2])
l1[[2]]
class(l1[[2]])
l1[[2]][3]
l1[2][3]
class(l1[[2]])
l1[[2]]
l1[[2]][3]
class(l1$letra)
l1$letra[2]
l1[[2]][3]
l1$letra[3]
l1$letra[3]
l1[[2]][3]
l1$letra[3]
#quiero rescatar la edad de Juan
l1[[5]]
l1[[5]][1]
#quiero rescatar la edad de Juan
l1[[5]][2]
#quiero rescatar la edad de Juan
class(l1[[5]][2] )
l1[[5]][[2]]
l1["letra"]
l1[["letra"]]
l1[["letra"]][[3]]
l1[["lista"]]["edad"]
l1[["lista"]][["edad"]]
l1[["lista"]]
l1$lista
class(l1$lista)
l1$letra
l1$letra[3]
l1$letra[3]
l1$letra[3]
l1$lista$edad
class(l1$lista$edad)
length(l1)
#para saber los nombres
names(l1)
names(l1$lista) <- "usuario"
l1
l1 <- list(num = c(11,10,22),
letra = c("a","c", "x", "y"),
palabra = "hola soy rodrigo",
mat = diag(1:5),
lista = list(nombre = "RODRIGO", edad = 39)
)
l1
names(l1$lista)
names(l1[[5]])
names(l1[5])[5]
names(l1)[5]
names(l1)
names(l1)[5]
names(l1)
names(l1)[5]
names(l1)[5] <- "Persona"
names(l1)
l1
names(l1)
names(l1)[5]
#para saber los nombres
class(names(l1))
save.image("D:/dev/Estadistica/CursoInicial.RData")
